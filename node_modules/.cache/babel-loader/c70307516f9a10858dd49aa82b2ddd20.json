{"ast":null,"code":"import _regeneratorRuntime from\"D:/Movie_s/movies_ss/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Movie_s/movies_ss/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"D:/Movie_s/movies_ss/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{Chip,createGenerateClassName}from'@material-ui/core';import axios from'axios';import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Genres=function Genres(_ref){var type=_ref.type,selectedGenres=_ref.selectedGenres,genres=_ref.genres,setGenres=_ref.setGenres,setSelectedGenres=_ref.setSelectedGenres,setPage=_ref.setPage;var handleRemove=function handleRemove(genre){setSelectedGenres(selectedGenres.filter(function(selected){return selected.id!==genre.id;}));setGenres([].concat(_toConsumableArray(genres),[genre]));setPage(1);};var handleAdd=function handleAdd(genre){setSelectedGenres([].concat(_toConsumableArray(selectedGenres),[genre]));setGenres(genres.filter(function(g){return g.id!==genre.id;}));setPage(1);};var fetchGenres=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"https://api.themoviedb.org/3/genre/\".concat(type,\"/list?api_key=eb174133a332dcdc4dbaf12f0723b142&language=en-US\"));case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setGenres(data.genres);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchGenres(){return _ref2.apply(this,arguments);};}();console.log(genres);useEffect(function(){fetchGenres();return function(){setGenres({});};},[]);return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"6px 0\"},children:[selectedGenres.map(function(genre){return/*#__PURE__*/_jsx(Chip,{style:{margin:2},label:genre.name,color:\"primary\",clickable:true,size:\"small\",onDelete:function onDelete(){return handleRemove(genre);}},genre.id);}),genres.map(function(genre){return/*#__PURE__*/_jsx(Chip,{label:genre.name,clickable:true,style:{margin:3},size:\"small\",onClick:function onClick(){return handleAdd(genre);}},genre.id);})]});};","map":{"version":3,"sources":["D:/Movie_s/movies_ss/src/Component/Genres.js"],"names":["Chip","createGenerateClassName","axios","React","useState","useEffect","Genres","type","selectedGenres","genres","setGenres","setSelectedGenres","setPage","handleRemove","genre","filter","selected","id","handleAdd","g","fetchGenres","get","data","console","log","padding","map","margin","name"],"mappings":"saAAA,OAASA,IAAT,CAAeC,uBAAf,KAA8C,mBAA9C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,C,wFAGA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAUhB,IATFC,CAAAA,IASE,MATFA,IASE,CARFC,cAQE,MARFA,cAQE,CAPDC,MAOC,MAPDA,MAOC,CANDC,SAMC,MANDA,SAMC,CALDC,iBAKC,MALDA,iBAKC,CAJDC,OAIC,MAJDA,OAIC,CAGF,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5BH,iBAAiB,CACfH,cAAc,CAACO,MAAf,CAAsB,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,EAAT,GAAgBH,KAAK,CAACG,EAApC,EAAtB,CADe,CAAjB,CAGAP,SAAS,8BAAKD,MAAL,GAAaK,KAAb,GAAT,CACAF,OAAO,CAAC,CAAD,CAAP,CACD,CANH,CAQA,GAAMM,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACJ,KAAD,CAAW,CACzBH,iBAAiB,8BAAKH,cAAL,GAAqBM,KAArB,GAAjB,CACAJ,SAAS,CAACD,MAAM,CAACM,MAAP,CAAc,SAACI,CAAD,QAAOA,CAAAA,CAAC,CAACF,EAAF,GAASH,KAAK,CAACG,EAAtB,EAAd,CAAD,CAAT,CACAL,OAAO,CAAC,CAAD,CAAP,CACD,CAJH,CAMA,GAAMQ,CAAAA,WAAW,2FAAC,mLAEKlB,CAAAA,KAAK,CAACmB,GAAN,8CAAgDd,IAAhD,kEAFL,uCAETe,IAFS,kBAETA,IAFS,CAKtBZ,SAAS,CAACY,IAAI,CAACb,MAAN,CAAT,CALsB,sDAAD,kBAAXW,CAAAA,WAAW,2CAAjB,CAQAG,OAAO,CAACC,GAAR,CAAYf,MAAZ,EAEAJ,SAAS,CAAC,UAAM,CACZe,WAAW,GAGX,MAAO,WACP,CACIV,SAAS,CAAC,EAAD,CAAT,CACH,CAHD,CAIH,CARQ,CAQN,EARM,CAAT,CAUA,mBACI,aAAK,KAAK,CAAE,CAACe,OAAO,CAAC,OAAT,CAAZ,WAEKjB,cAAc,CAACkB,GAAf,CAAmB,SAACZ,KAAD,qBAAY,KAAC,IAAD,EAAM,KAAK,CAAE,CAAEa,MAAM,CAAE,CAAV,CAAb,CAA4B,KAAK,CAAEb,KAAK,CAACc,IAAzC,CAA8D,KAAK,CAAC,SAApE,CAA8E,SAAS,KAAvF,CAAwF,IAAI,CAAC,OAA7F,CAAqG,QAAQ,CAAE,0BAAMf,CAAAA,YAAY,CAACC,KAAD,CAAlB,EAA/G,EAAoDA,KAAK,CAACG,EAA1D,CAAZ,EAAnB,CAFL,CAKDR,MAAM,CAACiB,GAAP,CAAW,SAACZ,KAAD,qBACR,KAAC,IAAD,EAAsB,KAAK,CAAEA,KAAK,CAACc,IAAnC,CAAyC,SAAS,KAAlD,CAAmD,KAAK,CAAE,CAAED,MAAM,CAAE,CAAV,CAA1D,CAA0E,IAAI,CAAC,OAA/E,CAAwF,OAAO,CAAE,yBAAMT,CAAAA,SAAS,CAACJ,KAAD,CAAf,EAAjG,EAAWA,KAAK,CAACG,EAAjB,CADQ,EAAX,CALC,GADJ,CAaH,CA5DM","sourcesContent":["import { Chip, createGenerateClassName } from '@material-ui/core';\r\nimport axios from 'axios'\r\nimport React,{useState,useEffect} from 'react'\r\n\r\n\r\nexport const Genres = ({\r\n    type,\r\n    selectedGenres,\r\n     genres, \r\n     setGenres, \r\n     setSelectedGenres, \r\n     setPage,\r\n\r\n\r\n\r\n}) => {\r\n\r\n\r\n    const handleRemove = (genre) => {\r\n        setSelectedGenres(\r\n          selectedGenres.filter((selected) => selected.id !== genre.id)\r\n        );\r\n        setGenres([...genres, genre]);\r\n        setPage(1);\r\n      };\r\n\r\n    const handleAdd = (genre) => {\r\n        setSelectedGenres([...selectedGenres, genre]);\r\n        setGenres(genres.filter((g) => g.id !== genre.id));\r\n        setPage(1);\r\n      };\r\n\r\n    const fetchGenres=async()=>\r\n    {\r\n      const {data}=  await axios.get(`https://api.themoviedb.org/3/genre/${type}/list?api_key=eb174133a332dcdc4dbaf12f0723b142&language=en-US`)\r\n\r\n\r\nsetGenres(data.genres);\r\n    };\r\n\r\n    console.log(genres);\r\n\r\n    useEffect(() => {\r\n        fetchGenres();\r\n\r\n\r\n        return ()=>\r\n        {\r\n            setGenres({});\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{padding:\"6px 0\"}} >\r\n\r\n            {selectedGenres.map((genre) => (<Chip style={{ margin: 2 }} label={genre.name} key={genre.id} color=\"primary\" clickable size=\"small\" onDelete={() => handleRemove(genre)} />\r\n                  ))}\r\n       \r\n      {genres.map((genre)=>(\r\n          <Chip key={genre.id}  label={genre.name} clickable style={{ margin: 3 }}  size=\"small\"  onClick={() => handleAdd(genre)}/>\r\n      )\r\n      )}\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}