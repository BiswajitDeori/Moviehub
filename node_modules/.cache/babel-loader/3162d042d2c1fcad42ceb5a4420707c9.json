{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie_s\\\\movies_ss\\\\src\\\\MainComp\\\\Series\\\\Series.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CustomPagination } from '../../Pagination/CustomPagination';\nimport SingleContent from '../Treading/SingleContent';\nimport { Genres } from '../../Component/Genres';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Series() {\n  _s();\n\n  const api = \"eb174133a332dcdc4dbaf12f0723b142\";\n  const [page, setPage] = useState(1);\n  const [content, setcontent] = useState([]);\n  const [no_pages, setno_pages] = useState(100);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [genres, setGenres] = useState([]);\n  let genresURL = UseGenres(selectedGenres);\n  useEffect(() => {\n    fetchMovies();\n  }, [page, no_pages, genresURL]);\n\n  const fetchMovies = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=eb174133a332dcdc4dbaf12f0723b142&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&pages=${page}&with_genres=${genresURL}`);\n    setcontent(data.results);\n    console.log(`the url ${genresURL}`); // console.log(data.results);\n    // console.log(data);\n\n    setno_pages(data.total_pages);\n    setcontent(data.results);\n    console.log(no_pages);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"pageTitle\",\n      children: \" Tv Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Genres, {\n      type: \"tv\",\n      selectedGenres: selectedGenres,\n      genres: genres,\n      setGenres: setGenres,\n      setSelectedGenres: setSelectedGenres,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.id,\n        title: c.title || c.name,\n        poster: c.poster_path,\n        date: c.release_date || c.first_air_date,\n        media_type: c.media_type,\n        vote1: c.vote_average\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CustomPagination, {\n      setPage: setPage,\n      numberPages: no_pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Series, \"4MBL13HThOaD8Md8lIkATfaQylc=\");\n\n_c = Series;\n\nvar _c;\n\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"sources":["D:/Movie_s/movies_ss/src/MainComp/Series/Series.js"],"names":["React","useState","useEffect","CustomPagination","SingleContent","Genres","Series","api","page","setPage","content","setcontent","no_pages","setno_pages","selectedGenres","setSelectedGenres","genres","setGenres","genresURL","UseGenres","fetchMovies","data","axios","get","results","console","log","total_pages","map","c","id","title","name","poster_path","release_date","first_air_date","media_type","vote_average"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AACA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAI7B,QAAMC,GAAG,GAAC,kCAAV;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,GAAD,CAAxC;AACD,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAApD;AACH,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AAEA,MAAIiB,SAAS,GAACC,SAAS,CAACL,cAAD,CAAvB;AACIZ,EAAAA,SAAS,CAAC,MAAM;AAEZkB,IAAAA,WAAW;AACd,GAHQ,EAGN,CAACZ,IAAD,EAAMI,QAAN,EAAeM,SAAf,CAHM,CAAT;;AAKA,QAAME,WAAW,GAAC,YAClB;AAGI,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMC,KAAK,CAACC,GAAN,CAAW,0KAAyKf,IAAK,gBAAeU,SAAU,EAAlN,CAAnB;AACAP,IAAAA,UAAU,CAACU,IAAI,CAACG,OAAN,CAAV;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAUR,SAAU,EAAjC,EAPJ,CASI;AACA;;AACAL,IAAAA,WAAW,CAACQ,IAAI,CAACM,WAAN,CAAX;AACAhB,IAAAA,UAAU,CAACU,IAAI,CAACG,OAAN,CAAV;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AAIH,GAnBD;;AAuBA,sBAEI;AAAA,4BAEA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAMF,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,IADP;AAEG,MAAA,cAAc,EAAEE,cAFnB;AAGI,MAAA,MAAM,EAAEE,MAHZ;AAII,MAAA,SAAS,EAAEC,SAJf;AAKI,MAAA,iBAAiB,EAAEF,iBALvB;AAMI,MAAA,OAAO,EAAEN;AANb;AAAA;AAAA;AAAA;AAAA,YANE,eAiBA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAEAC,OAAO,IAAGA,OAAO,CAACkB,GAAR,CAAaC,CAAD,iBAAK,QAAC,aAAD;AAGhB,QAAA,EAAE,EAAEA,CAAC,CAACC,EAHU;AAGN,QAAA,KAAK,EAAED,CAAC,CAACE,KAAF,IAASF,CAAC,CAACG,IAHZ;AAGkB,QAAA,MAAM,EAAEH,CAAC,CAACI,WAH5B;AAGyC,QAAA,IAAI,EAAEJ,CAAC,CAACK,YAAF,IAAgBL,CAAC,CAACM,cAHjE;AAGkF,QAAA,UAAU,EAAEN,CAAC,CAACO,UAHhG;AAG4G,QAAA,KAAK,EAAEP,CAAC,CAACQ;AAHrH,SAGtBR,CAAC,CAACC,EAHoB;AAAA;AAAA;AAAA;AAAA,cAAjB;AAFV;AAAA;AAAA;AAAA;AAAA,YAjBA,eA2BC,QAAC,gBAAD;AAAkB,MAAA,OAAO,EAAErB,OAA3B;AAAoC,MAAA,WAAW,EAAEG;AAAjD;AAAA;AAAA;AAAA;AAAA,YA3BD;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkCH;;GA1EuBN,M;;KAAAA,M","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { CustomPagination } from '../../Pagination/CustomPagination'\r\nimport SingleContent from '../Treading/SingleContent'\r\nimport { Genres } from '../../Component/Genres'\r\nexport default function Series() {\r\n\r\n\r\n\r\n    const api=\"eb174133a332dcdc4dbaf12f0723b142\"\r\n    const [page, setPage] = useState(1);\r\n    const [content, setcontent] = useState([]);\r\n    const [no_pages, setno_pages] = useState(100);\r\n   const [selectedGenres, setSelectedGenres] = useState([])\r\nconst [genres, setGenres] = useState([])\r\n\r\nlet genresURL=UseGenres(selectedGenres)\r\n    useEffect(() => {\r\n      \r\n        fetchMovies();\r\n    }, [page,no_pages,genresURL])\r\n\r\n    const fetchMovies=async()=>\r\n    {\r\n       \r\n        \r\n        const {data}=await axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=eb174133a332dcdc4dbaf12f0723b142&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&pages=${page}&with_genres=${genresURL}`)\r\n        setcontent(data.results);\r\n     \r\n\r\n        console.log(`the url ${genresURL}`)\r\n\r\n        // console.log(data.results);\r\n        // console.log(data);\r\n        setno_pages(data.total_pages);\r\n        setcontent(data.results);\r\n        \r\n        console.log(no_pages)\r\n\r\n    \r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n       \r\n        <div>\r\n            \r\n        <span className=\"pageTitle\"> Tv Series\r\n        </span>\r\n\r\n             \r\n      <Genres\r\n        type=\"tv\"\r\n         selectedGenres={selectedGenres}\r\n          genres={genres} \r\n          setGenres={setGenres} \r\n          setSelectedGenres={setSelectedGenres} \r\n          setPage={setPage}/>\r\n       \r\n\r\n    \r\n        \r\n        <div className=\"trending\">\r\n        {\r\n        content&& content.map((c)=><SingleContent\r\n        \r\n        \r\n        key={c.id} id={c.id} title={c.title||c.name} poster={c.poster_path} date={c.release_date||c.first_air_date}  media_type={c.media_type} vote1={c.vote_average}\r\n        />)}\r\n        \r\n        \r\n        </div>\r\n        {<CustomPagination setPage={setPage} numberPages={no_pages} />}\r\n         \r\n        \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}